<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net35;net45;net472;net48;netcoreapp3.0;netcoreapp3.1</TargetFrameworks>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<Product>Harmony</Product>
		<Company>Andreas Pardeike</Company>
		<Copyright>Copyright Â© 2016</Copyright>
		<Description>A general non-destructive patch library for .NET and Mono modules</Description>
		<PackageId>Lib.Harmony</PackageId>
		<Authors>Andreas Pardeike</Authors>
		<AssemblyName>0Harmony</AssemblyName>
		<SignAssembly>true</SignAssembly>
		<Version>2.0.3.0</Version>
		<PackageLicenseFile>LICENSE</PackageLicenseFile>
		<PackageProjectUrl>https://github.com/pardeike/Harmony</PackageProjectUrl>
		<PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
		<PackageTags>Harmony,Mono,Patch,Patching,Runtime,Detour,Detours,Aspect,Aspects</PackageTags>
		<AssemblyVersion>2.0.3.0</AssemblyVersion>
		<FileVersion>2.0.3.0</FileVersion>
		<PackageIcon>HarmonyLogo.png</PackageIcon>
		<PackageIconUrl>https://raw.githubusercontent.com/pardeike/Harmony/master/HarmonyLogo.png</PackageIconUrl>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<LogFile>obj/docfx-$(TargetFramework).log</LogFile>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<LangVersion>8.0</LangVersion>
		<DefaultItemExcludes>$(DefaultItemExcludes);Documentation/**</DefaultItemExcludes>
	</PropertyGroup>

	<Choose>
		<!-- Ideally would check for .NET Core and .NET 5.0+ via TargetFrameworkIdentifier being .NETCoreApp, but that property isn't defined at this point,
			so instead, relying on the fact that all .NET Core and .NET 5.0+ (and .NET Standard) have a period in their TFMs. -->
		<When Condition="$(TargetFramework.Contains('.'))">
			<PropertyGroup>
				<IsCoreOrStandard>true</IsCoreOrStandard>
			</PropertyGroup>
		</When>
		<Otherwise>
			<PropertyGroup>
				<IsCoreOrStandard>false</IsCoreOrStandard>
				<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
			</PropertyGroup>
		</Otherwise>
	</Choose>

	<ItemGroup>
		<None Include="..\LICENSE" Pack="true" PackagePath="" />
		<None Include="..\HarmonyLogo.png" Pack="true" Visible="false" PackagePath="" />
	</ItemGroup>

	<PropertyGroup Condition="'$(Configuration)'=='Debug'">
		<Optimize>false</Optimize>
		<DebugType>full</DebugType>
		<DebugSymbols>true</DebugSymbols>
		<DefineConstants>DEBUG</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)'=='Release'">
		<Optimize>true</Optimize>
		<DebugType>none</DebugType>
		<DebugSymbols>false</DebugSymbols>
	</PropertyGroup>

	<ItemGroup>
		<!-- https://dev.azure.com/MonoMod/MonoMod/_packaging?_a=feed&feed=DevBuilds -->
		<PackageReference Include="MonoMod.Common" Version="20.5.31.1">
			<PrivateAssets Condition="!$(IsCoreOrStandard) And '$(Configuration)'=='Release'">All</PrivateAssets>
		</PackageReference>

		<!-- Reference assemblies are needed for non-Windows .NET Framework targeting builds. -->
		<PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.0" PrivateAssets="All" />
		<PackageReference Include="jnm2.ReferenceAssemblies.net35" Version="1.0.1" PrivateAssets="All" Condition="'$(TargetFramework)'=='net35'" />

		<!-- See ILRepack.targets -->
		<PackageReference Include="ILRepack.Lib.MSBuild.Task" Version="2.0.18.1" PrivateAssets="All" />
	</ItemGroup>

	<Target Name="RemoveOldNuGetPackages" BeforeTargets="PreBuildEvent">
		<PropertyGroup>
			<WorkingDirectory>$(MSBuildThisFileDirectory)bin\$(Configuration)</WorkingDirectory>
		</PropertyGroup>
		<ItemGroup>
			<OldNugetPackages Include="$(WorkingDirectory)\$(PackageId).*.nupkg" Exclude="$(WorkingDirectory)\$(PackageId).$(Version).nupkg" />
		</ItemGroup>
		<Delete Files="@(OldNugetPackages)" />
	</Target>

	<Target Name="Zip" AfterTargets="Pack" DependsOnTargets="CleanZip" Condition="'$(Configuration)'=='Release'">
		<ZipDirectory SourceDirectory="$(MSBuildThisFileDirectory)bin\$(Configuration)" DestinationFile="$(MSBuildThisFileDirectory)bin\Harmony.$(Version).zip" Overwrite="true" />
	</Target>

	<Target Name="CleanZip" AfterTargets="Clean">
		<ItemGroup>
			<OldZipFiles Include="$(MSBuildThisFileDirectory)bin\*.zip" />
		</ItemGroup>
		<Delete Files="@(OldZipFiles)" />
	</Target>

</Project>
