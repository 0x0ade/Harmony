### YamlMime:ManagedReference
items:
- uid: Harmony.CodeInstruction
  commentId: T:Harmony.CodeInstruction
  id: CodeInstruction
  parent: Harmony
  children:
  - Harmony.CodeInstruction.#ctor(Harmony.CodeInstruction)
  - Harmony.CodeInstruction.#ctor(OpCode,System.Object)
  - Harmony.CodeInstruction.blocks
  - Harmony.CodeInstruction.Clone
  - Harmony.CodeInstruction.Clone(OpCode)
  - Harmony.CodeInstruction.Clone(System.Object)
  - Harmony.CodeInstruction.labels
  - Harmony.CodeInstruction.opcode
  - Harmony.CodeInstruction.operand
  - Harmony.CodeInstruction.ToString
  langs:
  - csharp
  - vb
  name: CodeInstruction
  nameWithType: CodeInstruction
  fullName: Harmony.CodeInstruction
  type: Class
  source:
    id: CodeInstruction
    path: ''
    startLine: 470
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: A high level wrapper for a IL code and its operand
  example: []
  syntax:
    content: public class CodeInstruction
    content.vb: Public Class CodeInstruction
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Harmony.CodeInstruction.opcode
  commentId: F:Harmony.CodeInstruction.opcode
  id: opcode
  parent: Harmony.CodeInstruction
  langs:
  - csharp
  - vb
  name: opcode
  nameWithType: CodeInstruction.opcode
  fullName: Harmony.CodeInstruction.opcode
  type: Field
  source:
    id: opcode
    path: ''
    startLine: 473
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: The opcode.
  example: []
  syntax:
    content: public OpCode opcode
    return:
      type: OpCode
    content.vb: Public opcode As OpCode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.CodeInstruction.operand
  commentId: F:Harmony.CodeInstruction.operand
  id: operand
  parent: Harmony.CodeInstruction
  langs:
  - csharp
  - vb
  name: operand
  nameWithType: CodeInstruction.operand
  fullName: Harmony.CodeInstruction.operand
  type: Field
  source:
    id: operand
    path: ''
    startLine: 476
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: The operand.
  example: []
  syntax:
    content: public object operand
    return:
      type: System.Object
    content.vb: Public operand As Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.CodeInstruction.labels
  commentId: F:Harmony.CodeInstruction.labels
  id: labels
  parent: Harmony.CodeInstruction
  langs:
  - csharp
  - vb
  name: labels
  nameWithType: CodeInstruction.labels
  fullName: Harmony.CodeInstruction.labels
  type: Field
  source:
    id: labels
    path: ''
    startLine: 479
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: The labels.
  example: []
  syntax:
    content: public List<Label> labels
    return:
      type: System.Collections.Generic.List{Label}
    content.vb: Public labels As List(Of Label)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.CodeInstruction.blocks
  commentId: F:Harmony.CodeInstruction.blocks
  id: blocks
  parent: Harmony.CodeInstruction
  langs:
  - csharp
  - vb
  name: blocks
  nameWithType: CodeInstruction.blocks
  fullName: Harmony.CodeInstruction.blocks
  type: Field
  source:
    id: blocks
    path: ''
    startLine: 482
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: The blocks.
  example: []
  syntax:
    content: public List<ExceptionBlock> blocks
    return:
      type: System.Collections.Generic.List{ExceptionBlock}
    content.vb: Public blocks As List(Of ExceptionBlock)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.CodeInstruction.#ctor(OpCode,System.Object)
  commentId: M:Harmony.CodeInstruction.#ctor(OpCode,System.Object)
  id: '#ctor(OpCode,System.Object)'
  parent: Harmony.CodeInstruction
  langs:
  - csharp
  - vb
  name: CodeInstruction(OpCode, Object)
  nameWithType: CodeInstruction.CodeInstruction(OpCode, Object)
  fullName: Harmony.CodeInstruction.CodeInstruction(OpCode, System.Object)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 488
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public CodeInstruction(OpCode opcode, object operand = null)
    parameters:
    - id: opcode
      type: OpCode
      description: The opcode.
    - id: operand
      type: System.Object
      description: (Optional) The operand.
    content.vb: Public Sub New(opcode As OpCode, operand As Object = Nothing)
  overload: Harmony.CodeInstruction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.CodeInstruction.#ctor(Harmony.CodeInstruction)
  commentId: M:Harmony.CodeInstruction.#ctor(Harmony.CodeInstruction)
  id: '#ctor(Harmony.CodeInstruction)'
  parent: Harmony.CodeInstruction
  langs:
  - csharp
  - vb
  name: CodeInstruction(CodeInstruction)
  nameWithType: CodeInstruction.CodeInstruction(CodeInstruction)
  fullName: Harmony.CodeInstruction.CodeInstruction(Harmony.CodeInstruction)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 500
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: "\nfull copy (be careful with duplicate labels and exception blocks!)\nfor normal cases, use Clone()\n"
  example: []
  syntax:
    content: public CodeInstruction(CodeInstruction instruction)
    parameters:
    - id: instruction
      type: Harmony.CodeInstruction
      description: The instruction.
    content.vb: Public Sub New(instruction As CodeInstruction)
  overload: Harmony.CodeInstruction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.CodeInstruction.Clone
  commentId: M:Harmony.CodeInstruction.Clone
  id: Clone
  parent: Harmony.CodeInstruction
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: CodeInstruction.Clone()
  fullName: Harmony.CodeInstruction.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 511
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: copy only opcode and operand.
  example: []
  syntax:
    content: public CodeInstruction Clone()
    return:
      type: Harmony.CodeInstruction
      description: A copy of this CodeInstruction.
    content.vb: Public Function Clone As CodeInstruction
  overload: Harmony.CodeInstruction.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.CodeInstruction.Clone(OpCode)
  commentId: M:Harmony.CodeInstruction.Clone(OpCode)
  id: Clone(OpCode)
  parent: Harmony.CodeInstruction
  langs:
  - csharp
  - vb
  name: Clone(OpCode)
  nameWithType: CodeInstruction.Clone(OpCode)
  fullName: Harmony.CodeInstruction.Clone(OpCode)
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 524
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: copy only operand, use new opcode.
  example: []
  syntax:
    content: public CodeInstruction Clone(OpCode opcode)
    parameters:
    - id: opcode
      type: OpCode
      description: The opcode.
    return:
      type: Harmony.CodeInstruction
      description: A copy of this CodeInstruction.
    content.vb: Public Function Clone(opcode As OpCode) As CodeInstruction
  overload: Harmony.CodeInstruction.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.CodeInstruction.Clone(System.Object)
  commentId: M:Harmony.CodeInstruction.Clone(System.Object)
  id: Clone(System.Object)
  parent: Harmony.CodeInstruction
  langs:
  - csharp
  - vb
  name: Clone(Object)
  nameWithType: CodeInstruction.Clone(Object)
  fullName: Harmony.CodeInstruction.Clone(System.Object)
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 535
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: copy only opcode, use new operand.
  example: []
  syntax:
    content: public CodeInstruction Clone(object operand)
    parameters:
    - id: operand
      type: System.Object
      description: The operand.
    return:
      type: Harmony.CodeInstruction
      description: A copy of this CodeInstruction.
    content.vb: Public Function Clone(operand As Object) As CodeInstruction
  overload: Harmony.CodeInstruction.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.CodeInstruction.ToString
  commentId: M:Harmony.CodeInstruction.ToString
  id: ToString
  parent: Harmony.CodeInstruction
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CodeInstruction.ToString()
  fullName: Harmony.CodeInstruction.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 545
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Harmony.CodeInstruction.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Harmony
  commentId: N:Harmony
  name: Harmony
  nameWithType: Harmony
  fullName: Harmony
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OpCode
  isExternal: true
  name: OpCode
  nameWithType: OpCode
  fullName: OpCode
- uid: System.Collections.Generic.List{Label}
  commentId: T:System.Collections.Generic.List{Label}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Label>
  nameWithType: List<Label>
  fullName: System.Collections.Generic.List<Label>
  nameWithType.vb: List(Of Label)
  fullName.vb: System.Collections.Generic.List(Of Label)
  name.vb: List(Of Label)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Label
    name: Label
    nameWithType: Label
    fullName: Label
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Label
    name: Label
    nameWithType: Label
    fullName: Label
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{ExceptionBlock}
  commentId: T:System.Collections.Generic.List{ExceptionBlock}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ExceptionBlock>
  nameWithType: List<ExceptionBlock>
  fullName: System.Collections.Generic.List<ExceptionBlock>
  nameWithType.vb: List(Of ExceptionBlock)
  fullName.vb: System.Collections.Generic.List(Of ExceptionBlock)
  name.vb: List(Of ExceptionBlock)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ExceptionBlock
    name: ExceptionBlock
    nameWithType: ExceptionBlock
    fullName: ExceptionBlock
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ExceptionBlock
    name: ExceptionBlock
    nameWithType: ExceptionBlock
    fullName: ExceptionBlock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Harmony.CodeInstruction.#ctor*
  commentId: Overload:Harmony.CodeInstruction.#ctor
  name: CodeInstruction
  nameWithType: CodeInstruction.CodeInstruction
  fullName: Harmony.CodeInstruction.CodeInstruction
- uid: Harmony.CodeInstruction
  commentId: T:Harmony.CodeInstruction
  parent: Harmony
  name: CodeInstruction
  nameWithType: CodeInstruction
  fullName: Harmony.CodeInstruction
- uid: Harmony.CodeInstruction.Clone*
  commentId: Overload:Harmony.CodeInstruction.Clone
  name: Clone
  nameWithType: CodeInstruction.Clone
  fullName: Harmony.CodeInstruction.Clone
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Harmony.CodeInstruction.ToString*
  commentId: Overload:Harmony.CodeInstruction.ToString
  name: ToString
  nameWithType: CodeInstruction.ToString
  fullName: Harmony.CodeInstruction.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
