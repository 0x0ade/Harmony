### YamlMime:ManagedReference
items:
- uid: Harmony.HarmonyArgument
  commentId: T:Harmony.HarmonyArgument
  id: HarmonyArgument
  parent: Harmony
  children:
  - Harmony.HarmonyArgument.#ctor(System.Int32)
  - Harmony.HarmonyArgument.#ctor(System.Int32,System.String)
  - Harmony.HarmonyArgument.#ctor(System.String)
  - Harmony.HarmonyArgument.#ctor(System.String,System.String)
  - Harmony.HarmonyArgument.Index
  - Harmony.HarmonyArgument.NewName
  - Harmony.HarmonyArgument.OriginalName
  langs:
  - csharp
  - vb
  name: HarmonyArgument
  nameWithType: HarmonyArgument
  fullName: Harmony.HarmonyArgument
  type: Class
  source:
    id: HarmonyArgument
    path: ''
    startLine: 393
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: A harmony argument.
  example: []
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method | AttributeTargets.Parameter, AllowMultiple = true)]

      public class HarmonyArgument : Attribute, _Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Class Or AttributeTargets.Method Or AttributeTargets.Parameter, AllowMultiple:=True)>

      Public Class HarmonyArgument
          Inherits Attribute
          Implements _Attribute
  inheritance:
  - System.Object
  - System.Attribute
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 2116
    namedArguments:
    - name: AllowMultiple
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Harmony.HarmonyArgument.OriginalName
  commentId: P:Harmony.HarmonyArgument.OriginalName
  id: OriginalName
  parent: Harmony.HarmonyArgument
  langs:
  - csharp
  - vb
  name: OriginalName
  nameWithType: HarmonyArgument.OriginalName
  fullName: Harmony.HarmonyArgument.OriginalName
  type: Property
  source:
    id: OriginalName
    path: ''
    startLine: 399
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Gets the name of the original.
  example: []
  syntax:
    content: public string OriginalName { get; }
    parameters: []
    return:
      type: System.String
      description: The name of the original.
    content.vb: Public ReadOnly Property OriginalName As String
  overload: Harmony.HarmonyArgument.OriginalName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Harmony.HarmonyArgument.Index
  commentId: P:Harmony.HarmonyArgument.Index
  id: Index
  parent: Harmony.HarmonyArgument
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: HarmonyArgument.Index
  fullName: Harmony.HarmonyArgument.Index
  type: Property
  source:
    id: Index
    path: ''
    startLine: 404
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Gets the zero-based index of this HarmonyArgument.
  example: []
  syntax:
    content: public int Index { get; }
    parameters: []
    return:
      type: System.Int32
      description: The index.
    content.vb: Public ReadOnly Property Index As Integer
  overload: Harmony.HarmonyArgument.Index*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Harmony.HarmonyArgument.NewName
  commentId: P:Harmony.HarmonyArgument.NewName
  id: NewName
  parent: Harmony.HarmonyArgument
  langs:
  - csharp
  - vb
  name: NewName
  nameWithType: HarmonyArgument.NewName
  fullName: Harmony.HarmonyArgument.NewName
  type: Property
  source:
    id: NewName
    path: ''
    startLine: 409
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Gets the name of the new.
  example: []
  syntax:
    content: public string NewName { get; }
    parameters: []
    return:
      type: System.String
      description: The name of the new.
    content.vb: Public ReadOnly Property NewName As String
  overload: Harmony.HarmonyArgument.NewName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Harmony.HarmonyArgument.#ctor(System.String)
  commentId: M:Harmony.HarmonyArgument.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Harmony.HarmonyArgument
  langs:
  - csharp
  - vb
  name: HarmonyArgument(String)
  nameWithType: HarmonyArgument.HarmonyArgument(String)
  fullName: Harmony.HarmonyArgument.HarmonyArgument(System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 414
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyArgument(string originalName)
    parameters:
    - id: originalName
      type: System.String
      description: Name of the original.
    content.vb: Public Sub New(originalName As String)
  overload: Harmony.HarmonyArgument.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.HarmonyArgument.#ctor(System.Int32)
  commentId: M:Harmony.HarmonyArgument.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Harmony.HarmonyArgument
  langs:
  - csharp
  - vb
  name: HarmonyArgument(Int32)
  nameWithType: HarmonyArgument.HarmonyArgument(Int32)
  fullName: Harmony.HarmonyArgument.HarmonyArgument(System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 421
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyArgument(int index)
    parameters:
    - id: index
      type: System.Int32
      description: Zero-based index of the.
    content.vb: Public Sub New(index As Integer)
  overload: Harmony.HarmonyArgument.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.HarmonyArgument.#ctor(System.String,System.String)
  commentId: M:Harmony.HarmonyArgument.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Harmony.HarmonyArgument
  langs:
  - csharp
  - vb
  name: HarmonyArgument(String, String)
  nameWithType: HarmonyArgument.HarmonyArgument(String, String)
  fullName: Harmony.HarmonyArgument.HarmonyArgument(System.String, System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 429
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyArgument(string originalName, string newName)
    parameters:
    - id: originalName
      type: System.String
      description: Name of the original.
    - id: newName
      type: System.String
      description: Name of the new.
    content.vb: Public Sub New(originalName As String, newName As String)
  overload: Harmony.HarmonyArgument.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.HarmonyArgument.#ctor(System.Int32,System.String)
  commentId: M:Harmony.HarmonyArgument.#ctor(System.Int32,System.String)
  id: '#ctor(System.Int32,System.String)'
  parent: Harmony.HarmonyArgument
  langs:
  - csharp
  - vb
  name: HarmonyArgument(Int32, String)
  nameWithType: HarmonyArgument.HarmonyArgument(Int32, String)
  fullName: Harmony.HarmonyArgument.HarmonyArgument(System.Int32, System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 440
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyArgument(int index, string name)
    parameters:
    - id: index
      type: System.Int32
      description: Zero-based index of the.
    - id: name
      type: System.String
      description: The name.
    content.vb: Public Sub New(index As Integer, name As String)
  overload: Harmony.HarmonyArgument.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Harmony
  commentId: N:Harmony
  name: Harmony
  nameWithType: Harmony
  fullName: Harmony
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Attribute
  commentId: T:System.Attribute
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Harmony.HarmonyArgument.OriginalName*
  commentId: Overload:Harmony.HarmonyArgument.OriginalName
  name: OriginalName
  nameWithType: HarmonyArgument.OriginalName
  fullName: Harmony.HarmonyArgument.OriginalName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Harmony.HarmonyArgument.Index*
  commentId: Overload:Harmony.HarmonyArgument.Index
  name: Index
  nameWithType: HarmonyArgument.Index
  fullName: Harmony.HarmonyArgument.Index
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Harmony.HarmonyArgument.NewName*
  commentId: Overload:Harmony.HarmonyArgument.NewName
  name: NewName
  nameWithType: HarmonyArgument.NewName
  fullName: Harmony.HarmonyArgument.NewName
- uid: Harmony.HarmonyArgument.#ctor*
  commentId: Overload:Harmony.HarmonyArgument.#ctor
  name: HarmonyArgument
  nameWithType: HarmonyArgument.HarmonyArgument
  fullName: Harmony.HarmonyArgument.HarmonyArgument
