### YamlMime:ManagedReference
items:
- uid: Harmony.HarmonyPatch
  commentId: T:Harmony.HarmonyPatch
  id: HarmonyPatch
  parent: Harmony
  children:
  - Harmony.HarmonyPatch.#ctor
  - Harmony.HarmonyPatch.#ctor(Harmony.MethodType)
  - Harmony.HarmonyPatch.#ctor(Harmony.MethodType,System.Type[])
  - Harmony.HarmonyPatch.#ctor(Harmony.MethodType,System.Type[],Harmony.ArgumentType[])
  - Harmony.HarmonyPatch.#ctor(System.String)
  - Harmony.HarmonyPatch.#ctor(System.String,Harmony.MethodType)
  - Harmony.HarmonyPatch.#ctor(System.String,Harmony.PropertyMethod)
  - Harmony.HarmonyPatch.#ctor(System.String,System.Type[])
  - Harmony.HarmonyPatch.#ctor(System.String,System.Type[],Harmony.ArgumentType[])
  - Harmony.HarmonyPatch.#ctor(System.Type)
  - Harmony.HarmonyPatch.#ctor(System.Type,Harmony.MethodType)
  - Harmony.HarmonyPatch.#ctor(System.Type,Harmony.MethodType,System.Type[])
  - Harmony.HarmonyPatch.#ctor(System.Type,Harmony.MethodType,System.Type[],Harmony.ArgumentType[])
  - Harmony.HarmonyPatch.#ctor(System.Type,System.String)
  - Harmony.HarmonyPatch.#ctor(System.Type,System.String,Harmony.MethodType)
  - Harmony.HarmonyPatch.#ctor(System.Type,System.String,System.Type[])
  - Harmony.HarmonyPatch.#ctor(System.Type,System.String,System.Type[],Harmony.ArgumentType[])
  - Harmony.HarmonyPatch.#ctor(System.Type,System.Type[])
  - Harmony.HarmonyPatch.#ctor(System.Type[])
  - Harmony.HarmonyPatch.#ctor(System.Type[],Harmony.ArgumentType[])
  langs:
  - csharp
  - vb
  name: HarmonyPatch
  nameWithType: HarmonyPatch
  fullName: Harmony.HarmonyPatch
  type: Class
  source:
    id: HarmonyPatch
    path: ''
    startLine: 65
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: A harmony patch.
  example: []
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = true)]

      public class HarmonyPatch : HarmonyAttribute, _Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Class Or AttributeTargets.Method, AllowMultiple:=True)>

      Public Class HarmonyPatch
          Inherits HarmonyAttribute
          Implements _Attribute
  inheritance:
  - System.Object
  - System.Attribute
  - Harmony.HarmonyAttribute
  inheritedMembers:
  - Harmony.HarmonyAttribute.info
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 68
    namedArguments:
    - name: AllowMultiple
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Harmony.HarmonyPatch.#ctor
  commentId: M:Harmony.HarmonyPatch.#ctor
  id: '#ctor'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch()
  nameWithType: HarmonyPatch.HarmonyPatch()
  fullName: Harmony.HarmonyPatch.HarmonyPatch()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 68
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  syntax:
    content: public HarmonyPatch()
    content.vb: Public Sub New
  overload: Harmony.HarmonyPatch.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.HarmonyPatch.#ctor(System.Type)
  commentId: M:Harmony.HarmonyPatch.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(Type)
  nameWithType: HarmonyPatch.HarmonyPatch(Type)
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.Type)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 75
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: starting with &apos;Type&apos;.
  example: []
  syntax:
    content: public HarmonyPatch(Type declaringType)
    parameters:
    - id: declaringType
      type: System.Type
      description: Type of the declaring.
    content.vb: Public Sub New(declaringType As Type)
  overload: Harmony.HarmonyPatch.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.HarmonyPatch.#ctor(System.Type,System.Type[])
  commentId: M:Harmony.HarmonyPatch.#ctor(System.Type,System.Type[])
  id: '#ctor(System.Type,System.Type[])'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(Type, Type[])
  nameWithType: HarmonyPatch.HarmonyPatch(Type, Type[])
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.Type, System.Type[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 84
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyPatch(Type declaringType, Type[] argumentTypes)
    parameters:
    - id: declaringType
      type: System.Type
      description: Type of the declaring.
    - id: argumentTypes
      type: System.Type[]
      description: List of types of the arguments.
    content.vb: Public Sub New(declaringType As Type, argumentTypes As Type())
  overload: Harmony.HarmonyPatch.#ctor*
  nameWithType.vb: HarmonyPatch.HarmonyPatch(Type, Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Harmony.HarmonyPatch.HarmonyPatch(System.Type, System.Type())
  name.vb: HarmonyPatch(Type, Type())
- uid: Harmony.HarmonyPatch.#ctor(System.Type,System.String)
  commentId: M:Harmony.HarmonyPatch.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(Type, String)
  nameWithType: HarmonyPatch.HarmonyPatch(Type, String)
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.Type, System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 94
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyPatch(Type declaringType, string methodName)
    parameters:
    - id: declaringType
      type: System.Type
      description: Type of the declaring.
    - id: methodName
      type: System.String
      description: Name of the method.
    content.vb: Public Sub New(declaringType As Type, methodName As String)
  overload: Harmony.HarmonyPatch.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.HarmonyPatch.#ctor(System.Type,System.String,System.Type[])
  commentId: M:Harmony.HarmonyPatch.#ctor(System.Type,System.String,System.Type[])
  id: '#ctor(System.Type,System.String,System.Type[])'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(Type, String, Type[])
  nameWithType: HarmonyPatch.HarmonyPatch(Type, String, Type[])
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.Type, System.String, System.Type[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 105
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyPatch(Type declaringType, string methodName, params Type[] argumentTypes)
    parameters:
    - id: declaringType
      type: System.Type
      description: Type of the declaring.
    - id: methodName
      type: System.String
      description: Name of the method.
    - id: argumentTypes
      type: System.Type[]
      description: List of types of the arguments.
    content.vb: Public Sub New(declaringType As Type, methodName As String, ParamArray argumentTypes As Type())
  overload: Harmony.HarmonyPatch.#ctor*
  nameWithType.vb: HarmonyPatch.HarmonyPatch(Type, String, Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Harmony.HarmonyPatch.HarmonyPatch(System.Type, System.String, System.Type())
  name.vb: HarmonyPatch(Type, String, Type())
- uid: Harmony.HarmonyPatch.#ctor(System.Type,System.String,System.Type[],Harmony.ArgumentType[])
  commentId: M:Harmony.HarmonyPatch.#ctor(System.Type,System.String,System.Type[],Harmony.ArgumentType[])
  id: '#ctor(System.Type,System.String,System.Type[],Harmony.ArgumentType[])'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(Type, String, Type[], ArgumentType[])
  nameWithType: HarmonyPatch.HarmonyPatch(Type, String, Type[], ArgumentType[])
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.Type, System.String, System.Type[], Harmony.ArgumentType[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 118
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyPatch(Type declaringType, string methodName, Type[] argumentTypes, ArgumentType[] argumentVariations)
    parameters:
    - id: declaringType
      type: System.Type
      description: Type of the declaring.
    - id: methodName
      type: System.String
      description: Name of the method.
    - id: argumentTypes
      type: System.Type[]
      description: List of types of the arguments.
    - id: argumentVariations
      type: Harmony.ArgumentType[]
      description: The argument variations.
    content.vb: Public Sub New(declaringType As Type, methodName As String, argumentTypes As Type(), argumentVariations As ArgumentType())
  overload: Harmony.HarmonyPatch.#ctor*
  nameWithType.vb: HarmonyPatch.HarmonyPatch(Type, String, Type(), ArgumentType())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Harmony.HarmonyPatch.HarmonyPatch(System.Type, System.String, System.Type(), Harmony.ArgumentType())
  name.vb: HarmonyPatch(Type, String, Type(), ArgumentType())
- uid: Harmony.HarmonyPatch.#ctor(System.Type,Harmony.MethodType)
  commentId: M:Harmony.HarmonyPatch.#ctor(System.Type,Harmony.MethodType)
  id: '#ctor(System.Type,Harmony.MethodType)'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(Type, MethodType)
  nameWithType: HarmonyPatch.HarmonyPatch(Type, MethodType)
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.Type, Harmony.MethodType)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 129
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyPatch(Type declaringType, MethodType methodType)
    parameters:
    - id: declaringType
      type: System.Type
      description: Type of the declaring.
    - id: methodType
      type: Harmony.MethodType
      description: Type of the method.
    content.vb: Public Sub New(declaringType As Type, methodType As MethodType)
  overload: Harmony.HarmonyPatch.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.HarmonyPatch.#ctor(System.Type,Harmony.MethodType,System.Type[])
  commentId: M:Harmony.HarmonyPatch.#ctor(System.Type,Harmony.MethodType,System.Type[])
  id: '#ctor(System.Type,Harmony.MethodType,System.Type[])'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(Type, MethodType, Type[])
  nameWithType: HarmonyPatch.HarmonyPatch(Type, MethodType, Type[])
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.Type, Harmony.MethodType, System.Type[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 140
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyPatch(Type declaringType, MethodType methodType, params Type[] argumentTypes)
    parameters:
    - id: declaringType
      type: System.Type
      description: Type of the declaring.
    - id: methodType
      type: Harmony.MethodType
      description: Type of the method.
    - id: argumentTypes
      type: System.Type[]
      description: List of types of the arguments.
    content.vb: Public Sub New(declaringType As Type, methodType As MethodType, ParamArray argumentTypes As Type())
  overload: Harmony.HarmonyPatch.#ctor*
  nameWithType.vb: HarmonyPatch.HarmonyPatch(Type, MethodType, Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Harmony.HarmonyPatch.HarmonyPatch(System.Type, Harmony.MethodType, System.Type())
  name.vb: HarmonyPatch(Type, MethodType, Type())
- uid: Harmony.HarmonyPatch.#ctor(System.Type,Harmony.MethodType,System.Type[],Harmony.ArgumentType[])
  commentId: M:Harmony.HarmonyPatch.#ctor(System.Type,Harmony.MethodType,System.Type[],Harmony.ArgumentType[])
  id: '#ctor(System.Type,Harmony.MethodType,System.Type[],Harmony.ArgumentType[])'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(Type, MethodType, Type[], ArgumentType[])
  nameWithType: HarmonyPatch.HarmonyPatch(Type, MethodType, Type[], ArgumentType[])
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.Type, Harmony.MethodType, System.Type[], Harmony.ArgumentType[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 153
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyPatch(Type declaringType, MethodType methodType, Type[] argumentTypes, ArgumentType[] argumentVariations)
    parameters:
    - id: declaringType
      type: System.Type
      description: Type of the declaring.
    - id: methodType
      type: Harmony.MethodType
      description: Type of the method.
    - id: argumentTypes
      type: System.Type[]
      description: List of types of the arguments.
    - id: argumentVariations
      type: Harmony.ArgumentType[]
      description: The argument variations.
    content.vb: Public Sub New(declaringType As Type, methodType As MethodType, argumentTypes As Type(), argumentVariations As ArgumentType())
  overload: Harmony.HarmonyPatch.#ctor*
  nameWithType.vb: HarmonyPatch.HarmonyPatch(Type, MethodType, Type(), ArgumentType())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Harmony.HarmonyPatch.HarmonyPatch(System.Type, Harmony.MethodType, System.Type(), Harmony.ArgumentType())
  name.vb: HarmonyPatch(Type, MethodType, Type(), ArgumentType())
- uid: Harmony.HarmonyPatch.#ctor(System.Type,System.String,Harmony.MethodType)
  commentId: M:Harmony.HarmonyPatch.#ctor(System.Type,System.String,Harmony.MethodType)
  id: '#ctor(System.Type,System.String,Harmony.MethodType)'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(Type, String, MethodType)
  nameWithType: HarmonyPatch.HarmonyPatch(Type, String, MethodType)
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.Type, System.String, Harmony.MethodType)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 165
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyPatch(Type declaringType, string propertyName, MethodType methodType)
    parameters:
    - id: declaringType
      type: System.Type
      description: Type of the declaring.
    - id: propertyName
      type: System.String
      description: Name of the property.
    - id: methodType
      type: Harmony.MethodType
      description: Type of the method.
    content.vb: Public Sub New(declaringType As Type, propertyName As String, methodType As MethodType)
  overload: Harmony.HarmonyPatch.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.HarmonyPatch.#ctor(System.String)
  commentId: M:Harmony.HarmonyPatch.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(String)
  nameWithType: HarmonyPatch.HarmonyPatch(String)
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 175
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: starting with &apos;string&apos;.
  example: []
  syntax:
    content: public HarmonyPatch(string methodName)
    parameters:
    - id: methodName
      type: System.String
      description: Name of the method.
    content.vb: Public Sub New(methodName As String)
  overload: Harmony.HarmonyPatch.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.HarmonyPatch.#ctor(System.String,System.Type[])
  commentId: M:Harmony.HarmonyPatch.#ctor(System.String,System.Type[])
  id: '#ctor(System.String,System.Type[])'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(String, Type[])
  nameWithType: HarmonyPatch.HarmonyPatch(String, Type[])
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.String, System.Type[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 184
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyPatch(string methodName, params Type[] argumentTypes)
    parameters:
    - id: methodName
      type: System.String
      description: Name of the method.
    - id: argumentTypes
      type: System.Type[]
      description: List of types of the arguments.
    content.vb: Public Sub New(methodName As String, ParamArray argumentTypes As Type())
  overload: Harmony.HarmonyPatch.#ctor*
  nameWithType.vb: HarmonyPatch.HarmonyPatch(String, Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Harmony.HarmonyPatch.HarmonyPatch(System.String, System.Type())
  name.vb: HarmonyPatch(String, Type())
- uid: Harmony.HarmonyPatch.#ctor(System.String,System.Type[],Harmony.ArgumentType[])
  commentId: M:Harmony.HarmonyPatch.#ctor(System.String,System.Type[],Harmony.ArgumentType[])
  id: '#ctor(System.String,System.Type[],Harmony.ArgumentType[])'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(String, Type[], ArgumentType[])
  nameWithType: HarmonyPatch.HarmonyPatch(String, Type[], ArgumentType[])
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.String, System.Type[], Harmony.ArgumentType[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 195
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyPatch(string methodName, Type[] argumentTypes, ArgumentType[] argumentVariations)
    parameters:
    - id: methodName
      type: System.String
      description: Name of the method.
    - id: argumentTypes
      type: System.Type[]
      description: List of types of the arguments.
    - id: argumentVariations
      type: Harmony.ArgumentType[]
      description: The argument variations.
    content.vb: Public Sub New(methodName As String, argumentTypes As Type(), argumentVariations As ArgumentType())
  overload: Harmony.HarmonyPatch.#ctor*
  nameWithType.vb: HarmonyPatch.HarmonyPatch(String, Type(), ArgumentType())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Harmony.HarmonyPatch.HarmonyPatch(System.String, System.Type(), Harmony.ArgumentType())
  name.vb: HarmonyPatch(String, Type(), ArgumentType())
- uid: Harmony.HarmonyPatch.#ctor(System.String,Harmony.MethodType)
  commentId: M:Harmony.HarmonyPatch.#ctor(System.String,Harmony.MethodType)
  id: '#ctor(System.String,Harmony.MethodType)'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(String, MethodType)
  nameWithType: HarmonyPatch.HarmonyPatch(String, MethodType)
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.String, Harmony.MethodType)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 205
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyPatch(string propertyName, MethodType methodType)
    parameters:
    - id: propertyName
      type: System.String
      description: Name of the property.
    - id: methodType
      type: Harmony.MethodType
      description: Type of the method.
    content.vb: Public Sub New(propertyName As String, methodType As MethodType)
  overload: Harmony.HarmonyPatch.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.HarmonyPatch.#ctor(Harmony.MethodType)
  commentId: M:Harmony.HarmonyPatch.#ctor(Harmony.MethodType)
  id: '#ctor(Harmony.MethodType)'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(MethodType)
  nameWithType: HarmonyPatch.HarmonyPatch(MethodType)
  fullName: Harmony.HarmonyPatch.HarmonyPatch(Harmony.MethodType)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 214
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: starting with &apos;MethodType&apos;.
  example: []
  syntax:
    content: public HarmonyPatch(MethodType methodType)
    parameters:
    - id: methodType
      type: Harmony.MethodType
      description: Type of the method.
    content.vb: Public Sub New(methodType As MethodType)
  overload: Harmony.HarmonyPatch.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Harmony.HarmonyPatch.#ctor(Harmony.MethodType,System.Type[])
  commentId: M:Harmony.HarmonyPatch.#ctor(Harmony.MethodType,System.Type[])
  id: '#ctor(Harmony.MethodType,System.Type[])'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(MethodType, Type[])
  nameWithType: HarmonyPatch.HarmonyPatch(MethodType, Type[])
  fullName: Harmony.HarmonyPatch.HarmonyPatch(Harmony.MethodType, System.Type[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 223
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyPatch(MethodType methodType, params Type[] argumentTypes)
    parameters:
    - id: methodType
      type: Harmony.MethodType
      description: Type of the method.
    - id: argumentTypes
      type: System.Type[]
      description: List of types of the arguments.
    content.vb: Public Sub New(methodType As MethodType, ParamArray argumentTypes As Type())
  overload: Harmony.HarmonyPatch.#ctor*
  nameWithType.vb: HarmonyPatch.HarmonyPatch(MethodType, Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Harmony.HarmonyPatch.HarmonyPatch(Harmony.MethodType, System.Type())
  name.vb: HarmonyPatch(MethodType, Type())
- uid: Harmony.HarmonyPatch.#ctor(Harmony.MethodType,System.Type[],Harmony.ArgumentType[])
  commentId: M:Harmony.HarmonyPatch.#ctor(Harmony.MethodType,System.Type[],Harmony.ArgumentType[])
  id: '#ctor(Harmony.MethodType,System.Type[],Harmony.ArgumentType[])'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(MethodType, Type[], ArgumentType[])
  nameWithType: HarmonyPatch.HarmonyPatch(MethodType, Type[], ArgumentType[])
  fullName: Harmony.HarmonyPatch.HarmonyPatch(Harmony.MethodType, System.Type[], Harmony.ArgumentType[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 234
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyPatch(MethodType methodType, Type[] argumentTypes, ArgumentType[] argumentVariations)
    parameters:
    - id: methodType
      type: Harmony.MethodType
      description: Type of the method.
    - id: argumentTypes
      type: System.Type[]
      description: List of types of the arguments.
    - id: argumentVariations
      type: Harmony.ArgumentType[]
      description: The argument variations.
    content.vb: Public Sub New(methodType As MethodType, argumentTypes As Type(), argumentVariations As ArgumentType())
  overload: Harmony.HarmonyPatch.#ctor*
  nameWithType.vb: HarmonyPatch.HarmonyPatch(MethodType, Type(), ArgumentType())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Harmony.HarmonyPatch.HarmonyPatch(Harmony.MethodType, System.Type(), Harmony.ArgumentType())
  name.vb: HarmonyPatch(MethodType, Type(), ArgumentType())
- uid: Harmony.HarmonyPatch.#ctor(System.Type[])
  commentId: M:Harmony.HarmonyPatch.#ctor(System.Type[])
  id: '#ctor(System.Type[])'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(Type[])
  nameWithType: HarmonyPatch.HarmonyPatch(Type[])
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.Type[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 243
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: starting with &apos;Type[]&apos;.
  example: []
  syntax:
    content: public HarmonyPatch(Type[] argumentTypes)
    parameters:
    - id: argumentTypes
      type: System.Type[]
      description: List of types of the arguments.
    content.vb: Public Sub New(argumentTypes As Type())
  overload: Harmony.HarmonyPatch.#ctor*
  nameWithType.vb: HarmonyPatch.HarmonyPatch(Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Harmony.HarmonyPatch.HarmonyPatch(System.Type())
  name.vb: HarmonyPatch(Type())
- uid: Harmony.HarmonyPatch.#ctor(System.Type[],Harmony.ArgumentType[])
  commentId: M:Harmony.HarmonyPatch.#ctor(System.Type[],Harmony.ArgumentType[])
  id: '#ctor(System.Type[],Harmony.ArgumentType[])'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(Type[], ArgumentType[])
  nameWithType: HarmonyPatch.HarmonyPatch(Type[], ArgumentType[])
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.Type[], Harmony.ArgumentType[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 252
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Constructor.
  example: []
  syntax:
    content: public HarmonyPatch(Type[] argumentTypes, ArgumentType[] argumentVariations)
    parameters:
    - id: argumentTypes
      type: System.Type[]
      description: List of types of the arguments.
    - id: argumentVariations
      type: Harmony.ArgumentType[]
      description: The argument variations.
    content.vb: Public Sub New(argumentTypes As Type(), argumentVariations As ArgumentType())
  overload: Harmony.HarmonyPatch.#ctor*
  nameWithType.vb: HarmonyPatch.HarmonyPatch(Type(), ArgumentType())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Harmony.HarmonyPatch.HarmonyPatch(System.Type(), Harmony.ArgumentType())
  name.vb: HarmonyPatch(Type(), ArgumentType())
- uid: Harmony.HarmonyPatch.#ctor(System.String,Harmony.PropertyMethod)
  commentId: M:Harmony.HarmonyPatch.#ctor(System.String,Harmony.PropertyMethod)
  id: '#ctor(System.String,Harmony.PropertyMethod)'
  parent: Harmony.HarmonyPatch
  langs:
  - csharp
  - vb
  name: HarmonyPatch(String, PropertyMethod)
  nameWithType: HarmonyPatch.HarmonyPatch(String, PropertyMethod)
  fullName: Harmony.HarmonyPatch.HarmonyPatch(System.String, Harmony.PropertyMethod)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 257
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  syntax:
    content: >-
      [Obsolete("This attribute will be removed in the next major version. Use HarmonyPatch together with MethodType.Getter or MethodType.Setter instead")]

      public HarmonyPatch(string propertyName, PropertyMethod type)
    parameters:
    - id: propertyName
      type: System.String
    - id: type
      type: Harmony.PropertyMethod
    content.vb: >-
      <Obsolete("This attribute will be removed in the next major version. Use HarmonyPatch together with MethodType.Getter or MethodType.Setter instead")>

      Public Sub New(propertyName As String, type As PropertyMethod)
  overload: Harmony.HarmonyPatch.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This attribute will be removed in the next major version. Use HarmonyPatch together with MethodType.Getter or MethodType.Setter instead
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Harmony
  commentId: N:Harmony
  name: Harmony
  nameWithType: Harmony
  fullName: Harmony
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Attribute
  commentId: T:System.Attribute
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: Harmony.HarmonyAttribute
  commentId: T:Harmony.HarmonyAttribute
  parent: Harmony
  name: HarmonyAttribute
  nameWithType: HarmonyAttribute
  fullName: Harmony.HarmonyAttribute
- uid: Harmony.HarmonyAttribute.info
  commentId: F:Harmony.HarmonyAttribute.info
  parent: Harmony.HarmonyAttribute
  name: info
  nameWithType: HarmonyAttribute.info
  fullName: Harmony.HarmonyAttribute.info
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Harmony.HarmonyPatch.#ctor*
  commentId: Overload:Harmony.HarmonyPatch.#ctor
  name: HarmonyPatch
  nameWithType: HarmonyPatch.HarmonyPatch
  fullName: Harmony.HarmonyPatch.HarmonyPatch
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Harmony.ArgumentType[]
  isExternal: true
  name: ArgumentType[]
  nameWithType: ArgumentType[]
  fullName: Harmony.ArgumentType[]
  nameWithType.vb: ArgumentType()
  fullName.vb: Harmony.ArgumentType()
  name.vb: ArgumentType()
  spec.csharp:
  - uid: Harmony.ArgumentType
    name: ArgumentType
    nameWithType: ArgumentType
    fullName: Harmony.ArgumentType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Harmony.ArgumentType
    name: ArgumentType
    nameWithType: ArgumentType
    fullName: Harmony.ArgumentType
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Harmony.MethodType
  commentId: T:Harmony.MethodType
  parent: Harmony
  name: MethodType
  nameWithType: MethodType
  fullName: Harmony.MethodType
- uid: Harmony.PropertyMethod
  commentId: T:Harmony.PropertyMethod
  parent: Harmony
  name: PropertyMethod
  nameWithType: PropertyMethod
  fullName: Harmony.PropertyMethod
