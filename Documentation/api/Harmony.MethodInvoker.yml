### YamlMime:ManagedReference
items:
- uid: Harmony.MethodInvoker
  commentId: T:Harmony.MethodInvoker
  id: MethodInvoker
  parent: Harmony
  children:
  - Harmony.MethodInvoker.GetHandler(DynamicMethod,Module)
  - Harmony.MethodInvoker.GetHandler(MethodInfo)
  langs:
  - csharp
  - vb
  name: MethodInvoker
  nameWithType: MethodInvoker
  fullName: Harmony.MethodInvoker
  type: Class
  source:
    id: MethodInvoker
    path: ''
    startLine: 1887
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: A method invoker.
  example: []
  syntax:
    content: public class MethodInvoker
    content.vb: Public Class MethodInvoker
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Harmony.MethodInvoker.GetHandler(DynamicMethod,Module)
  commentId: M:Harmony.MethodInvoker.GetHandler(DynamicMethod,Module)
  id: GetHandler(DynamicMethod,Module)
  parent: Harmony.MethodInvoker
  langs:
  - csharp
  - vb
  name: GetHandler(DynamicMethod, Module)
  nameWithType: MethodInvoker.GetHandler(DynamicMethod, Module)
  fullName: Harmony.MethodInvoker.GetHandler(DynamicMethod, Module)
  type: Method
  source:
    id: GetHandler
    path: ''
    startLine: 1894
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Handler, called when the get.
  example: []
  syntax:
    content: public static FastInvokeHandler GetHandler(DynamicMethod methodInfo, Module module)
    parameters:
    - id: methodInfo
      type: DynamicMethod
      description: Information describing the method.
    - id: module
      type: Module
      description: The module.
    return:
      type: Harmony.FastInvokeHandler
      description: The handler.
    content.vb: Public Shared Function GetHandler(methodInfo As DynamicMethod, module As  Module) As FastInvokeHandler
  overload: Harmony.MethodInvoker.GetHandler*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Harmony.MethodInvoker.GetHandler(MethodInfo)
  commentId: M:Harmony.MethodInvoker.GetHandler(MethodInfo)
  id: GetHandler(MethodInfo)
  parent: Harmony.MethodInvoker
  langs:
  - csharp
  - vb
  name: GetHandler(MethodInfo)
  nameWithType: MethodInvoker.GetHandler(MethodInfo)
  fullName: Harmony.MethodInvoker.GetHandler(MethodInfo)
  type: Method
  source:
    id: GetHandler
    path: ''
    startLine: 1903
  assemblies:
  - cs.temp.dll
  namespace: Harmony
  summary: Handler, called when the get.
  example: []
  syntax:
    content: public static FastInvokeHandler GetHandler(MethodInfo methodInfo)
    parameters:
    - id: methodInfo
      type: MethodInfo
      description: Information describing the method.
    return:
      type: Harmony.FastInvokeHandler
      description: The handler.
    content.vb: Public Shared Function GetHandler(methodInfo As MethodInfo) As FastInvokeHandler
  overload: Harmony.MethodInvoker.GetHandler*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Harmony
  commentId: N:Harmony
  name: Harmony
  nameWithType: Harmony
  fullName: Harmony
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Harmony.MethodInvoker.GetHandler*
  commentId: Overload:Harmony.MethodInvoker.GetHandler
  name: GetHandler
  nameWithType: MethodInvoker.GetHandler
  fullName: Harmony.MethodInvoker.GetHandler
- uid: DynamicMethod
  isExternal: true
  name: DynamicMethod
  nameWithType: DynamicMethod
  fullName: DynamicMethod
- uid: Module
  commentId: '!:Module'
  isExternal: true
  name: Module
  nameWithType: Module
  fullName: Module
- uid: Harmony.FastInvokeHandler
  commentId: T:Harmony.FastInvokeHandler
  parent: Harmony
  name: FastInvokeHandler
  nameWithType: FastInvokeHandler
  fullName: Harmony.FastInvokeHandler
- uid: MethodInfo
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: MethodInfo
